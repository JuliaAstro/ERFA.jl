using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["liberfa"], :liberfa),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaAstro/ERFABuilder/releases/download/v1.4.0/"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/liberfa.aarch64-linux-gnu.tar.gz", "d6c033a726ce72f50e869119c5074f919f555d426dce9b728d14b6440fd345a0"),
    Linux(:aarch64, :musl) => ("$bin_prefix/liberfa.aarch64-linux-musl.tar.gz", "9200465a398db8da494e65b4ed691ec3cd1d282398604f9b63ce5fdd5f2cc3e6"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/liberfa.arm-linux-gnueabihf.tar.gz", "e504295f15cd75745104a3df45989c96513027b0e03382ecec1f388dbe6f8271"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/liberfa.arm-linux-musleabihf.tar.gz", "ab6b7150038caa310832d2e68f3840a843f3203301afa6b8312778f782b94745"),
    Linux(:i686, :glibc) => ("$bin_prefix/liberfa.i686-linux-gnu.tar.gz", "12730094b738fba3a1ba6fd8bd44acd5c331e8c82ce534ff7e0fe8d04d1c8a25"),
    Linux(:i686, :musl) => ("$bin_prefix/liberfa.i686-linux-musl.tar.gz", "1e81ec97c6f2afd980dea4400c948f6b4415f7c310850cf22cf874829822612a"),
    Windows(:i686) => ("$bin_prefix/liberfa.i686-w64-mingw32.tar.gz", "c2ebd4bc331537a039f14895921b66d2ec727d4423528e7e48e8c2209956ea75"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/liberfa.powerpc64le-linux-gnu.tar.gz", "9c4004865fddbdd51f50c89c424fe9ed99239fde359c21aa98304cbb99c01ceb"),
    MacOS(:x86_64) => ("$bin_prefix/liberfa.x86_64-apple-darwin14.tar.gz", "fcdc4e4ab082ef7f287f187e37bae64ef61132f726169b03498a5d7fc6f1ce0c"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/liberfa.x86_64-linux-gnu.tar.gz", "3f77f1b05b2f6c2f3847fe0466f82c70de4e6c3f8033249a6a19fb645ebe58dc"),
    Linux(:x86_64, :musl) => ("$bin_prefix/liberfa.x86_64-linux-musl.tar.gz", "64c38e7d311942ed298012b093abe3cdd09ff5b210dee015b1be467dca212d32"),
    FreeBSD(:x86_64) => ("$bin_prefix/liberfa.x86_64-unknown-freebsd11.1.tar.gz", "a26cc55bb6679234bac676b262d7141c2585949b7fcfd0594753ecb81c8f043a"),
    Windows(:x86_64) => ("$bin_prefix/liberfa.x86_64-w64-mingw32.tar.gz", "1abc4eb5f4dac16ab732059437edfa73f48357b4a557103f4597ff1b9d0d231d"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
